RUN MONGODB
docker run --name mongodb -p 27017:27017 --rm -d mongo

RUN BACKEND
cd backend
docker build -t goals-app-image .
docker run --name goals-app -p 80:80 -d --rm goals-app-image

RUN FRONTEND
cd frontend
docker build -t goals-react-image .
docker run --name goals-react -p 3000:3000 -it -d --rm goals-react-image

##########################################################
RUN WITH NETWORK

docker network create goals-net

RUN MONGODB
docker run --name mongodb -v data:/data/db --network goals-net --rm -d -e MONGO_INITDB_ROOT_USERNAME=wong -e MONGO_INITDB_ROOT_PASSWORD=secret mongo

RUN BACKEND
cd backend
docker build -t goals-backend-image .
docker run --name goals-backend -p 80:80 --network goals-net -d --rm -v ${PWD}:/app -v ${PWD}/logs:/app/logs -v /app/node_modules -e MONGO_INITDB_ROOT_USERNAME=wong -e MONGO_INITDB_ROOT_PASSWORD=secret goals-backend-image

RUN FRONTEND
cd frontend
docker build -t goals-react-image .
docker run --name goals-react -p 3000:3000 -it -d --rm goals-react-image

- P/S: no need to set network for frontend due to we dont need to communicate with database, we still need export port for backend.
Because frontend start server and read code from browser which is on our localhost not on docker, so we need to export port of backend for frontend to communicate.